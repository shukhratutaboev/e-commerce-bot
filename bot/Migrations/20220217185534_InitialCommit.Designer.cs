// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using bot.Entities;

#nullable disable

namespace bot.Migrations
{
    [DbContext(typeof(BotDbContext))]
    [Migration("20220217185534_InitialCommit")]
    partial class InitialCommit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.2");

            modelBuilder.Entity("bot.Entities.Location", b =>
                {
                    b.Property<double>("Longitude")
                        .HasColumnType("REAL");

                    b.Property<double>("Latitude")
                        .HasColumnType("REAL");

                    b.HasKey("Longitude");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("bot.Entities.User", b =>
                {
                    b.Property<long?>("ChatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("Fullname")
                        .HasColumnType("TEXT");

                    b.Property<double?>("LocationLongitude")
                        .HasColumnType("REAL");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<int>("Process")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("ChatId");

                    b.HasIndex("LocationLongitude");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("bot.Entities.User", b =>
                {
                    b.HasOne("bot.Entities.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationLongitude");

                    b.Navigation("Location");
                });
#pragma warning restore 612, 618
        }
    }
}
